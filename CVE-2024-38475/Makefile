.PHONY: all docker run run_interactive test do_test stop

all: docker

docker: Dockerfile
	docker build --tag devmanner/httpd_test .

run_foreground: 
	docker run -it -p 8080:80 devmanner/httpd_test

run_interactive: 
	docker run -it -p 8080:80 devmanner/httpd_test /bin/bash

run_background: 
	docker run -p 8080:80 --name run_httpd_test -d -t devmanner/httpd_test

stop:
	docker kill run_httpd_test
	docker rm run_httpd_test

test:
	$(MAKE) run_background

	@trap '$(MAKE) stop' EXIT; \
	echo "######################################"; \
	echo "### Running tests"; \
	if $(MAKE) do_test; then \
		echo "### All ests passed!"; \
	else \
		echo "### Some test failed!"; \
		exit 1; \
	fi ;\
	echo "######################################"

do_test:
	$(MAKE) test_run_test_cgi
	$(MAKE) test_access_source_of_test_cgi
	$(MAKE) test_access_source_of_test_cgi_through_vuln

test_run_test_cgi:
	@echo "### This should return 200 ok"
	@OUTPUT=$$(curl -s --write-out '%{http_code}' --output /dev/null 'http://localhost:8080/cgi-bin/test-cgi'); \
	if [ "$$OUTPUT" = "200" ]; then \
		echo "Returned 200 OK"; \
	else \
		echo "Failed: Output was '$$OUTPUT'."; \
		exit 1; \
	fi

test_access_source_of_test_cgi:
	@echo "### This should return 404"
	@OUTPUT=$$(curl -s --write-out '%{http_code}' --output /dev/null 'http://localhost:8080/html/usr/local/apache2/cgi-bin/test-cgi'); \
	if [ "$$OUTPUT" = "404" ]; then \
		echo "Returned 404 OK"; \
	else \
		echo "Failed: Output was '$$OUTPUT'."; \
		exit 1; \
	fi

test_access_source_of_test_cgi_through_vuln:
	@echo "### This should return 200 by exploiting the vuln"
	@OUTPUT=$$(curl -s --write-out '%{http_code}' --output /dev/null 'http://localhost:8080/html/usr/local/apache2/cgi-bin/test-cgi%3f'); \
	if [ "$$OUTPUT" = "200" ]; then \
		echo "Returned 200 OK"; \
	else \
		echo "Failed: Output was '$$OUTPUT'."; \
		exit 1; \
	fi
	

clean:
	docker rmi -f devmanner/httpd_test
